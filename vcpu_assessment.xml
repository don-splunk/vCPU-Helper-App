<form version="1.1">
  <!-- <form> -->
  <label>vCPU Infra Assessment</label>
  <description>Use this as a reference point and starting guide; If you need more clarity, ask your account team to bring in Splunk Architects to discuss further.</description>
  <init>
    <set token="_internal">(index=_internal)</set>
  </init>
  <!-- </form> -->
  <!-- other helpful apps/links 
  - Misc. dashboards: https://github.com/silkyrich/cluster_health_tools
  - Chargeback app: https://splunkbase.splunk.com/app/5688
  - SCMA (vCPU to Cloud Workload): https://splunkbase.splunk.com/app/5688
  - SVA: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf
  - Internal Calc: https://sizing.sv.splunk.com:8000/en-US/app/splunk-sizing-calculator/start
  - Old Calc: https://sizing.sv.splunk.com/unified/
  
  
  -->
  <fieldset submitButton="false">
    <input type="checkbox" token="show_base_searches">
      <label></label>
      <choice value="show_base_searches">Show discovery searches</choice>
      <delimiter> </delimiter>
    </input>
  </fieldset>
  <row>
    <panel>
      <html>
<h1>Introduction</h1>

This dashboard contains a series of searches that attempt to reverse engineer and size your Splunk infrastructure. It classifies each host to its role, counts the number of CPUs, extracts the software version, measures CPU utilisation, assesses the search load for each component. The output can aid with vCPU pricing and allow the comparision with other instances of Splunk.
        <p/>

<!--
<h2>Install the dashboard</h2>

<ul>
  <li>Install the dashboard with copy and paste on a suitable SH (not a CM, a SH connecting to many clusters)</li>
  <li>Check that your user has access to the _internal and _audit indexers</li>
  <li>Review the “Billable roles to vCPU count with utilisation measure” and “Roles to versions” to make sure results are as expected.</li>
  <li>Optionally check the “show discovery searches” to understand how extraction is working</li>
  <li>Optionally obfuscate the data and export the bottom table – “The base report - please export this report for further processing”</li>
  <li>Share the exported table as required (for instances send to rmorgan@splunk.com for further assessment)</li>
</ul>

<h2>Requirements</h2>

The design principal behind the dashboard is to use basic search on the _internal and _audit index only. For this reason, the dashboard should be installed on a search head that connects to every indexer in very cluster. Installing it on a cluster master is this is unlikely to work as the cluster master may not search all indexers. Your user must have access to the internal and audit indexes. The roles of your infrastructure must be correctly applied, for instance classifying indexers as heavy forwarders will cause errors.

<h3>Disclaimer</h3>

All information is provided at your own risk. All data collected is classfied service data as described in <a href="https://www.splunk.com/en_us/legal/privacy/privacy-policy.html">SPLUNK PRIVACY POLICY</a>. Please review the CSV file to determine whether any information is sensitive. This has not been tested on all versions of Splunk and one or more base searches may fail. 

-->
  </html>
    </panel>
  </row>
  <row depends="$show_base_searches$">
    <panel>
      <title>introspection_vcpu_count - $introspection_vcpu_count$</title>
      <input type="dropdown" token="avg_function">
        <label>Calculation for average</label>
        <choice value="avg">mean</choice>
        <choice value="mode">mode</choice>
        <choice value="median">median</choice>
        <choice value="p90">p90</choice>
        <choice value="p95">p95</choice>
        <choice value="p99">p99</choice>
        <default>p99</default>
      </input>
      <table>
        <title>Collects the vCPU count from _introspection</title>
        <search id="introspection_vcpu_count">
          <progress>
            <unset token="introspection_vcpu_count"></unset>
          </progress>
          <done>
            <set token="introspection_vcpu_count">$job.sid$</set>
          </done>
          <query>index=_introspection component=hostwide 
| eval cpu_usage_pct='data.cpu_system_pct'+'data.cpu_user_pct'
| stats 
    values(data.cpu_count) as cpu_count
    values(data.virtual_cpu_count) as vcpu_count
    values(data.splunk_version) as introspection_splunk_version
    values(data.os_version) as introspection_os_version
    $avg_function$(cpu_usage_pct) as avg_cpu_usage_pct
    by host data.instance_guid 
| rename data.instance_guid as guid</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>tcpin_connections $tcpin_connections$</title>
      <table>
        <title>Collects information about components acting as a HWF (can be a CM, LM, SH etc)</title>
        <search>
          <progress>
            <unset token="tcpin_connections"></unset>
          </progress>
          <done>
            <set token="tcpin_connections">$job.sid$</set>
          </done>
          <query>$_internal$ Metrics sourcetype=splunkd TERM(group=tcpin_connections) earliest=-15min latest=now  TERM(fwdType=full)
| stats 
    values(connectionType) as tcp_connectionType
    values(arch) as tcp_arch
    values(version) as tcp_version
    values(fwdType) as tcp_fwdType
    values(os) as tcp_os
    sum(kb) as tcp_sum_kb
    dc(host) as tcp_targets_touched
    by hostname guid
| table *
| rename hostname as host</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>metrics_instance - $metrics_instance$</title>
      <table>
        <title>data mines the component classification, doesn't normally include a HWF</title>
        <search id="metrics_instance">
          <progress>
            <unset token="metrics_instance"></unset>
          </progress>
          <done>
            <set token="metrics_instance">$job.sid$</set>
          </done>
          <query>$_internal$ earliest=-90min latest=now sourcetype=splunkd NOT(CASE(MetricSchemaProcessor))  Metrics TERM(group=instance) TERM(name=instance) (deployment_client OR cluster_search_head OR search_head OR indexer OR cluster_slave OR search_peer OR license_master) NOT(universal_forwarder)
| stats 
    count 
    values(instance_roles) as roles 
    values(index_cluster_label) as idx_cluster_name
    by instance_guid server_name 
| eval mv_roles=split(roles, ", ") 
| eval idx_cluster_name=if(idx_cluster_name="none", "", idx_cluster_name)
| stats 
    count(eval(mv_roles="indexer")) as role_indexer
    count(eval(mv_roles="search_peer")) as role_search_peer
    count(eval(mv_roles="cluster_search_head")) as role_cluster_search_head
    count(eval(mv_roles="search_head")) as role_search_head
    count(eval(mv_roles="cluster_slave")) as role_cluster_slave
    count(eval(mv_roles="kv_store")) as role_kv_store_role 
    count(eval(mv_roles="cluster_master")) as role_cluster_master
    count(eval(mv_roles="license_master")) as role_license_master
    count(eval(mv_roles="deployment_server_master")) as role_deployment_server
    count(eval(mv_roles="deployment_client")) as role_deployment_client
    count(eval(mv_roles="shc_captain")) as role_shc_captain
    count(eval(mv_roles="shc_member")) as role_shc_member
    by instance_guid server_name roles idx_cluster_name
| rename instance_guid as guid 
| rename server_name as host</query>
          <earliest>-4h@m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>license_usage $license_usage$</title>
      <table>
        <title>license_usage $license_usage$</title>
        <search>
          <progress>
            <unset token="license_usage"></unset>
          </progress>
          <done>
            <set token="license_usage">$job.sid$</set>
          </done>
          <query>$_internal$ sourcetype=splunkd source=*license_usage.log TERM(type=RolloverSummary) NOT (licenseGroup=Trial)
| bin span=1d@d _time
| eval key="license_".licenseGroup."_".productType
| stats values(eval(b/1024/1024/1024)) as gb by key _time slave
| stats p90(gb) as gb by key slave
| eval gb=round(gb,0)
| rename slave as guid
| xyseries guid key gb</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">1</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <title>search_concurrency - $search_concurrency$</title>
      <table>
        <title>collects search concurrency information from all reporting components</title>
        <search>
          <progress>
            <unset token="search_concurrency"></unset>
          </progress>
          <done>
            <set token="search_concurrency">$job.sid$</set>
          </done>
          <query>$_internal$ sourcetype=splunkd METRICS TERM(group=search_pool) 
| stats p5(idle) as search_con_idle_p5
    p95(idle) as search_con_idle_p95
    max(active) as search_con_active_max
    p95(active) as search_con_active_p95
    p5(active) as search_con_active_p5
    by host</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <title>search_usage - $search_usage$</title>
      <table>
        <title>collects search execution details</title>
        <search>
          <progress>
            <unset token="search_usage"></unset>
          </progress>
          <done>
            <set token="search_usage">$job.sid$</set>
          </done>
          <query>index=_audit TERM(info=completed) TERM(action=search) NOT(user=splunk-system-user) 
| stats 
    count as search_completed
    dc(user) as search_unique_users 
    avg(total_run_time) as search_avg_run_time 
    p95(total_run_time) as search_p95_run_time 
    stdev(total_run_time) as search_stdev_run_time 
    avg(search_startup_time) as search_avg_startup_time 
    p95(search_startup_time) as search_p95_startup_time 
    stdev(search_startup_time) as search_stdev_startup_time 
    by host</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Total vCPU billable / non-billable</title>
      <single>
        <search base="classified_hosts">
          <query>| stats sum(eval(if(billable=1,vcpu_count,0))) as total_billable_vcpu 
    sum(eval(if(billable=0,vcpu_count,0))) as total_unbillable_vcpu 
| eval label=total_billable_vcpu."/".total_unbillable_vcpu
| fields label</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <title>vCPU in active use according to $avg_function$</title>
      <single>
        <search base="summarized_usage">
          <query>| stats sum(vCPU_used)</query>
        </search>
        <option name="drilldown">none</option>
      </single>
    </panel>
    <panel>
      <title>Licences detected</title>
      <table>
        <search>
          <query>$_internal$ sourcetype=splunkd source=*license_usage.log TERM(type=RolloverSummary) NOT (licenseGroup=Trial) earliest=-25hrs latest=now
| stats count by productType licenseGroup subgroupId
| table productType licenseGroup subgroupId</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Roles to versions</title>
      <table>
        <search base="classified_hosts">
          <query>| chart limit=0 count as instances by primary_role version</query>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">heatmap</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Billable roles to vCPU count with utilisation measure</title>
      <table>
        <search base="classified_hosts" id="summarized_usage">
          <query>| where billable=1
| eval cpu_used=vcpu_count*(avg_cpu_usage_pct)/100
| stats count as instances 
    sum(vcpu_count) as total_vCPU
    sum(cpu_used) as vCPU_used
    median(avg_cpu_usage_pct) as avg_cpu_usage_pct
    sum(license_*) as lic_*
    avg(search_con_active_p95) as search_con_p95
    by primary_role idx_cluster_name
| table primary_role idx_cluster_name instances total_vCPU avg_cpu_usage_pct search_con_p95 vCPU_used lic_*
| foreach lic_* [| eval &lt;&lt;FIELD&gt;&gt;=round(&lt;&lt;FIELD&gt;&gt;,0) ]</query>
        </search>
        <option name="count">100</option>
        <option name="dataOverlayMode">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="number" field="avg_cpu_usage_pct">
          <option name="precision">0</option>
          <option name="unit">%</option>
        </format>
        <format type="number" field="vCPU_used">
          <option name="precision">0</option>
        </format>
        <format type="color" field="instances">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="number" field="total_vCPU">
          <option name="precision">0</option>
        </format>
        <format type="color" field="total_vCPU">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="avg_cpu_usage_pct">
          <colorPalette type="list">[#65A637,#6DB7C6,#F7BC38,#F58F39,#D93F3C]</colorPalette>
          <scale type="threshold">0,30,70,100</scale>
        </format>
        <format type="color" field="vCPU_used">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <!--
        <format type="number" field="lic_Enterprise_enterprise">
          <option name="precision">0</option>
        </format>
        <format type="color" field="lic_Enterprise_enterprise">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        -->
        <format type="number" field="search_con_p95">
          <option name="precision">0</option>
        </format>
        <format type="color" field="search_con_p95">
          <colorPalette type="minMidMax" maxColor="#1E93C6" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>The base report - please export this report for further processing</title>
      <input type="dropdown" token="obstification">
        <label>Obstificate host names?</label>
        <choice value="| eval obstification=&quot;true&quot;, guid=md5(guid), idx_cluster_name=md5(idx_cluster_name),host=md5(host)">Yes</choice>
        <choice value="| noop">No</choice>
        <default>| noop</default>
      </input>
      <table>
        <search id="classified_hosts">
          <query>| union 
    [| union 
        [| loadjob $metrics_instance$ ] 
        [| loadjob $tcpin_connections$ ] 
        [| loadjob $introspection_vcpu_count$ ] 
        [| loadjob $license_usage$ ] 
    | stats values(*) as * by guid ] 
    [| loadjob $search_concurrency$ ]
    [| loadjob $search_usage$ ]
| stats values(*) as * by host 
| eval primary_role=case(role_indexer=1,"indexer",
    role_cluster_master=1,"cluster_master",
    role_cluster_search_head=1,"search_head_cluster",
    role_search_head=1,"search_head",
    role_license_master=1,"license_master",
    role_deployment_server_master=1,"deployment_server_master",
    tcp_fwdType="full","heavy_forwarder",
    tcp_fwdType="uf","universal_forwarder"
    ) 
| eval billable=case(primary_role="indexer", 1,
    primary_role="cluster_master", 0,
    primary_role="search_head", 1,
    primary_role="search_head_cluster", 1,
    primary_role="heavy_forwarder", 0,
    primary_role="universal_forwarder", 0,
    primary_role="license_master", 0,
    primary_role="deployment_server_master",0
    ) 
| table host guid primary_role idx_cluster_name billable avg_cpu_usage_pct cpu_count vcpu_count introspection_splunk_version tcp_* search* license* 
| eval date_of_generation=now(), date_of_generation_str=strftime(date_of_generation,"%c")
| eval version=coalesce(tcp_version, introspection_splunk_version)
$obstification$
| fillnull idx_cluster_name</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="vcpu_count">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_count">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="number" field="avg_cpu_usage_pct">
          <option name="precision">0</option>
          <option name="unit">%</option>
        </format>
        <format type="color" field="avg_cpu_usage_pct">
          <colorPalette type="list">[#65A637,#6DB7C6,#F7BC38,#F58F39,#D93F3C]</colorPalette>
          <scale type="threshold">0,30,70,100</scale>
        </format>
        <format type="color" field="usage_Enterprise_enterprise">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="search_con_active_max">
          <colorPalette type="minMidMax" maxColor="#D6563C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="search_con_active_p5">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="search_con_active_p95">
          <colorPalette type="minMidMax" maxColor="#D6563C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="search_con_idle_p5">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="search_con_idle_p95">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>vCPU - Prediction</title>
      <chart>
        <title>based on the current vCPU usage</title>
        <search ref="vCPU - Predict vCPU usage"></search>
        <option name="charting.drilldown">none</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <style>
          /* linear-gradient( -60deg,#f91cf880,#ee1d62 90%,#f4781f 97%,#f16221 97%,#f05a22 97%,#ee1d62 97%,#ed008082 97%) !important */


          .fieldset .input {
              width: 220px;
              background: #80808036;
              color: #e81456; /* orange */
              border-radius: 10px;
              padding: 6px;
          }
          .panel-title{
            background: linear-gradient( -60deg,#f91cf880,#ee1d62 90%,#f4781f 97%,#f16221 97%,#f05a22 97%,#ee1d62 97%,#ed008082 97%) !important;
            font-family: Verdana;
            font-weight: bolder;
            
    color: white;
          }
          .dashboard-row .dashboard-panel .panel-head h3 {
             background: #ffa50012;
          }
          .dashboard-row .dashboard-panel .error-details i {
            color: #f8be3445;
          }
        </style>
      <hr/>
    </html>
    </panel>
  </row>
</form>
